
<firebase-auth style="display: flex;">
  <div id="login" style="display: flex;">
  <button style="background-color: transparent; border: none;" id="sign-in-button"><svg xmlns="http://www.w3.org/2000/svg" width="35" height="35" fill="#000000" viewBox="0 0 256 256"><path d="M141.66,133.66l-40,40a8,8,0,0,1-11.32-11.32L116.69,136H24a8,8,0,0,1,0-16h92.69L90.34,93.66a8,8,0,0,1,11.32-11.32l40,40A8,8,0,0,1,141.66,133.66ZM200,32H136a8,8,0,0,0,0,16h56V208H136a8,8,0,0,0,0,16h64a8,8,0,0,0,8-8V40A8,8,0,0,0,200,32Z"></path></svg></button>
  </div>
  <p id="user" style="display: flex;">
    <svg xmlns="http://www.w3.org/2000/svg" width="35" height="35" fill="#000000" viewBox="0 0 256 256"><path d="M221.35,104.11a8,8,0,0,0-6.57,9.21A88.85,88.85,0,0,1,216,128a87.62,87.62,0,0,1-22.24,58.41,79.66,79.66,0,0,0-36.06-28.75,48,48,0,1,0-59.4,0,79.66,79.66,0,0,0-36.06,28.75A88,88,0,0,1,128,40a88.76,88.76,0,0,1,14.68,1.22,8,8,0,0,0,2.64-15.78,103.92,103.92,0,1,0,85.24,85.24A8,8,0,0,0,221.35,104.11ZM96,120a32,32,0,1,1,32,32A32,32,0,0,1,96,120ZM74.08,197.5a64,64,0,0,1,107.84,0,87.83,87.83,0,0,1-107.84,0ZM237.66,45.66l-32,32a8,8,0,0,1-11.32,0l-16-16a8,8,0,0,1,11.32-11.32L200,60.69l26.34-26.35a8,8,0,0,1,11.32,11.32Z"></path>
      <title id="user-email">Not signed in</title>
    </svg>
  </p>
</firebase-auth>

<script>
const signInButton = document.getElementById('sign-in-button');
if (signInButton) {
  signInButton.addEventListener('click', function() {
    showSignIn();
  });
}
import { getAuth, signInWithPopup, GoogleAuthProvider, onAuthStateChanged } from "firebase/auth";
import { getFirebaseApp } from "../firebase/firebaseApp";
const provider = new GoogleAuthProvider();
provider.addScope('https://www.googleapis.com/auth/contacts.readonly');
const auth = getAuth(getFirebaseApp());

let email;

function showSignIn() {
signInWithPopup(auth, provider)
  .then((result) => {
    // This gives you a Google Access Token. You can use it to access the Google API.
    const credential = GoogleAuthProvider.credentialFromResult(result);
    const _token = credential?.accessToken;
    // The signed-in user info.
    const _user = result.user;
    // IdP data available using getAdditionalUserInfo(result)
    // ...
  }).catch((error) => {
    // Handle Errors here.
    const _errorCode = error.code;
    const _errorMessage = error.message;
    // The email of the user's account used.
    email = error.customData.email;
    // The AuthCredential type that was used.
    const _credential = GoogleAuthProvider.credentialFromError(error);
    // ...
  });
}
onAuthStateChanged(auth, (user) => {
  if (user) {
    // User is signed in, see docs for a list of available properties
    // https://firebase.google.com/docs/reference/js/auth.user
    email = user.email;
    const _authUser = user;
    const loginElement = document.getElementById('login');
    const userElement = document.getElementById('user');
    const userEmailElement = document.getElementById('user-email');
    
    if (loginElement) loginElement.style.display = 'none';
    if (userElement) userElement.style.display = 'flex';
    if (userEmailElement) userEmailElement.textContent = email || 'Signed In';
  } else {
    // User is signed out
    const loginElement = document.getElementById('login');
    const userElement = document.getElementById('user');
    const userEmailElement = document.getElementById('user-email');
    
    if (loginElement) loginElement.style.display = 'flex'; // Show login div when user is signed out
    if (userElement) userElement.style.display = 'none';
    if (userEmailElement) userEmailElement.textContent = 'Not signed in';
  }
});

// Define a custom element to expose firebase auth state
class FirebaseAuth extends HTMLElement {
  connectedCallback() {
    // Custom element initialization code if needed
  }
}

customElements.define('firebase-auth', FirebaseAuth);
</script>
