---
// FirebaseAuth.astro - Refactored for better mobile display
---

<div class="firebase-auth inline-flex items-center justify-center">
  <div id="login" class="block">
    <button
      class="flex h-8 w-8 items-center justify-center rounded-md text-black hover:bg-gray-100 focus:outline-none"
      id="sign-in-button"
      aria-label="Sign in"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="20"
        fill="currentColor"
        viewBox="0 0 256 256"
      >
        <path
          d="M216.57,39.43A80,80,0,0,0,83.91,120.78L28.69,176A15.86,15.86,0,0,0,24,187.31V216a16,16,0,0,0,16,16H72a8,8,0,0,0,8-8V208H96a8,8,0,0,0,8-8V184h16a8,8,0,0,0,5.66-2.34l9.56-9.57A79.73,79.73,0,0,0,160,176h.1A80,80,0,0,0,216.57,39.43ZM224,98.1c-1.09,34.09-29.75,61.86-63.89,61.9H160a63.7,63.7,0,0,1-23.65-4.51,8,8,0,0,0-8.84,1.68L116.69,168H96a8,8,0,0,0-8,8v16H72a8,8,0,0,0-8,8v16H40V187.31l58.83-58.82a8,8,0,0,0,1.68-8.84A63.72,63.72,0,0,1,96,95.92c0-34.14,27.81-62.8,61.9-63.89A64,64,0,0,1,224,98.1ZM192,76a12,12,0,1,1-12-12A12,12,0,0,1,192,76Z"
        ></path>
      </svg>
    </button>
  </div>

  <div id="user" class="hidden">
    <button
      class="flex h-8 w-8 items-center justify-center rounded-md text-black hover:bg-gray-100 focus:outline-none"
      id="user-button"
      aria-label="User profile"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="20"
        fill="currentColor"
        viewBox="0 0 256 256"
      >
        <path
          d="M221.35,104.11a8,8,0,0,0-6.57,9.21A88.85,88.85,0,0,1,216,128a87.62,87.62,0,0,1-22.24,58.41,79.66,79.66,0,0,0-36.06-28.75,48,48,0,1,0-59.4,0,79.66,79.66,0,0,0-36.06,28.75A88,88,0,0,1,128,40a88.76,88.76,0,0,1,14.68,1.22,8,8,0,0,0,2.64-15.78,103.92,103.92,0,1,0,85.24,85.24A8,8,0,0,0,221.35,104.11ZM96,120a32,32,0,1,1,32,32A32,32,0,0,1,96,120ZM74.08,197.5a64,64,0,0,1,107.84,0,87.83,87.83,0,0,1-107.84,0ZM237.66,45.66l-32,32a8,8,0,0,1-11.32,0l-16-16a8,8,0,0,1,11.32-11.32L200,60.69l26.34-26.35a8,8,0,0,1,11.32,11.32Z"
        ></path>
        <title id="user-email">Not signed in</title>
      </svg>
    </button>
  </div>

  <script>
    const signInButton = document.getElementById('sign-in-button');
    const userButton = document.getElementById('user-button');
    const loginElement = document.getElementById('login');
    const userElement = document.getElementById('user');

    if (signInButton) {
      signInButton.addEventListener('click', function () {
        showSignIn();
      });
    }
    if (userButton) {
      userButton.addEventListener('click', async function () {
        await auth.signOut();
      });
    }
    import {
      signInWithPopup,
      onAuthStateChanged,
      GoogleAuthProvider,
    } from 'firebase/auth';
    import { googleAuthProvider, auth } from '../firebase/firebaseApp';

    let email;

    function showSignIn() {
      signInWithPopup(auth, googleAuthProvider)
        .then((result) => {
          // This gives you a Google Access Token. You can use it to access the Google API.
          const credential = GoogleAuthProvider.credentialFromResult(result);
          const _token = credential?.accessToken;
          // The signed-in user info.
          const _user = result.user;
          // IdP data available using getAdditionalUserInfo(result)
          // ...
        })
        .catch((error) => {
          // Handle Errors here.
          const _errorCode = error.code;
          const _errorMessage = error.message;
          // The email of the user's account used.
          email = error.customData.email;
          // The AuthCredential type that was used.
          const _credential = GoogleAuthProvider.credentialFromError(error);
          // ...
        });
    }
    onAuthStateChanged(auth, (user) => {
      if (user) {
        // User is signed in, see docs for a list of available properties
        // https://firebase.google.com/docs/reference/js/auth.user
        email = user.email;
        const _authUser = user;
        const userEmailElement = document.getElementById('user-email');

        if (loginElement) loginElement.classList.add('hidden');
        if (userElement) userElement.classList.remove('hidden');
        if (userEmailElement)
          userEmailElement.textContent = email || 'Signed In';
      } else {
        // User is signed out
        const userEmailElement = document.getElementById('user-email');

        if (loginElement) loginElement.classList.remove('hidden');
        if (userElement) userElement.classList.add('hidden');
        if (userEmailElement) userEmailElement.textContent = 'Not signed in';
      }
    });
  </script>
</div>
